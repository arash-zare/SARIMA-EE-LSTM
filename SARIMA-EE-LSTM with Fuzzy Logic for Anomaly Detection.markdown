# تشخیص ناهنجاری قابل تفسیر با استفاده از ARIMA و LSTM با بهبود منطق فازی برای نظارت بر داده‌های زمانی

## چکیده
تشخیص ناهنجاری در داده‌های زمانی شبکه‌های ارتباطی برای شناسایی تهدیدات سایبری، مانند حملات DDoS، و حفظ پایداری سیستم‌های حیاتی در نیروی انتظامی از اهمیت بسزایی برخوردار است. این مقاله روشی نوین با عنوان «تشخیص ناهنجاری قابل تفسیر با استفاده از ARIMA و LSTM با بهبود منطق فازی» معرفی می‌کند که ترکیبی از مدل‌های آماری ARIMA، شبکه‌های عصبی LSTM و منطق فازی را برای پیش‌بینی و تشخیص ناهنجاری در داده‌های زمانی ارائه می‌دهد. این روش با بهره‌گیری از منطق فازی، امتیازهای ریسک پیوسته‌ای (0 تا 1) تولید می‌کند که تفسیرپذیری و دقت تشخیص را بهبود می‌بخشد. در مقایسه با روش ARIMA-EE-LSTM، که از آستانه‌های سخت برای تشخیص ناهنجاری استفاده می‌کند، روش پیشنهادی به دلیل توانایی مدل‌سازی الگوهای پیچیده و ارائه تصمیم‌گیری انعطاف‌پذیر، عملکرد بهتری از خود نشان می‌دهد. ارزیابی‌های انجام‌شده با داده‌های مصنوعی و واقعی نشان‌دهنده برتری این روش در دقت تشخیص و قابلیت تفسیر است، اگرچه نیاز به تنظیم آستانه‌ها و آموزش با داده‌های واقعی برای کاربردهای عملی وجود دارد.

## 1. مقدمه
داده‌های زمانی، که مشاهدات متوالی در فواصل زمانی منظم را ثبت می‌کنند، در حوزه‌های مختلفی از جمله شبکه‌های ارتباطی، نظارت بر زیرساخت‌ها و امنیت سایبری کاربرد دارند. در زمینه نیروی انتظامی، تشخیص سریع ناهنجاری‌ها در داده‌های زمانی شبکه، مانند افزایش ناگهانی نرخ ترافیک یا تعداد اتصالات فعال، برای شناسایی تهدیدات امنیتی و حفظ پایداری سیستم‌های ارتباطی حیاتی است. روش‌های سنتی مانند ARIMA (AutoRegressive Integrated Moving Average) برای پیش‌بینی داده‌های زمانی مؤثر هستند اما در مدل‌سازی الگوهای پیچیده و غیرخطی محدودیت دارند. شبکه‌های عصبی LSTM (Long Short-Term Memory) با توانایی یادگیری وابستگی‌های طولانی‌مدت، این محدودیت را برطرف می‌کنند، اما تفسیرپذیری نتایج آن‌ها ممکن است چالش‌برانگیز باشد. منطق فازی با ارائه رویکردی انعطاف‌پذیر برای تصمیم‌گیری در شرایط نامطمئن، می‌تواند این شکاف را پر کند.

این مقاله روشی ترکیبی با عنوان «تشخیص ناهنجاری قابل تفسیر با استفاده از ARIMA و LSTM با بهبود منطق فازی» معرفی می‌کند که از ترکیب مدل‌های ARIMA و LSTM برای پیش‌بینی و منطق فازی برای تشخیص ناهنجاری استفاده می‌کند. این روش با هدف افزایش دقت و تفسیرپذیری طراحی شده و با روش ARIMA-EE-LSTM مقایسه می‌شود، که ترکیبی از ARIMA و LSTM بدون منطق فازی است. نتایج ارزیابی نشان می‌دهند که روش پیشنهادی به دلیل استفاده از منطق فازی، عملکرد بهتری در تشخیص ناهنجاری‌های شبکه‌ای ارائه می‌دهد.

## 2. پیش‌زمینه
### 2.1. مدل ARIMA
ARIMA یک مدل آماری پرکاربرد برای پیش‌بینی داده‌های زمانی است که از سه مؤلفه تشکیل شده است:
- **خودکار (AR)**: مدل‌سازی وابستگی‌های زمانی با استفاده از مشاهدات قبلی.
- **تفاضل (I)**: تبدیل داده‌های غیرایستا به داده‌های ایستا با تفاضل‌گیری.
- **متحرک متوسط (MA)**: مدل‌سازی خطاها با استفاده از میانگین‌های متحرک.

فرمول کلی ARIMA به صورت زیر است:
\[
\text{ARIMA}(p, d, q)
\]
که در آن \(p\) تعداد مؤلفه‌های خودکار، \(d\) درجه تفاضل، و \(q\) تعداد مؤلفه‌های متحرک متوسط است. ARIMA برای داده‌های غیرفصلی مناسب است، اما برای داده‌های شبکه‌ای با الگوهای فصلی، مدل SARIMA (Seasonal ARIMA) که شامل مؤلفه‌های فصلی \((P, D, Q)_m\) است، ترجیح داده می‌شود ([Time Series Forecasting](https://neptune.ai/blog/anomaly-detection-in-time-series)).

### 2.2. مدل LSTM
LSTM یک نوع شبکه عصبی متکرر است که برای پردازش دنباله‌های زمانی طراحی شده است. این مدل با استفاده از دروازه‌های ورودی، فراموشی و خروجی، وابستگی‌های طولانی‌مدت را در داده‌ها حفظ می‌کند. معماری LSTM شامل:
- **سلول‌های حافظه**: برای ذخیره اطلاعات طولانی‌مدت.
- **لایه‌های کاملاً متصل**: برای تولید پیش‌بینی‌های نهایی.

LSTM به‌ویژه برای داده‌های زمانی با الگوهای غیرخطی و پیچیده، مانند متریک‌های شبکه، مؤثر است ([LSTM for Anomaly Detection](https://www.sciencedirect.com/science/article/pii/S0743731524001151)).

### 2.3. منطق فازی
منطق فازی با استفاده از توابع عضویت، امکان تصمیم‌گیری در شرایط نامطمئن را فراهم می‌کند. برخلاف منطق دودویی که فقط مقادیر 0 یا 1 را می‌پذیرد، منطق فازی مقادیر پیوسته بین 0 و 1 را ارائه می‌دهد. در تشخیص ناهنجاری، منطق فازی می‌تواند خطاهای پیش‌بینی را به امتیازهای ریسک تبدیل کند، که این امر تفسیرپذیری و انعطاف‌پذیری را افزایش می‌دهد ([Fuzzy Logic in SDN](https://ieeexplore.ieee.org/document/9085352)).

### 2.4. روش ARIMA-EE-LSTM
ARIMA-EE-LSTM ترکیبی از ARIMA و LSTM است که در آن ARIMA برای پیش‌بینی کوتاه‌مدت و LSTM برای پیش‌بینی بلندمدت استفاده می‌شود. تشخیص ناهنجاری معمولاً با مقایسه خطای پیش‌بینی (MSE) با آستانه‌های سخت انجام می‌شود. این روش برای داده‌های غیرفصلی مؤثر است اما در داده‌های شبکه‌ای با الگوهای فصلی ممکن است دقت کمتری داشته باشد ([LSTM-ARIMA Combined Model](https://link.springer.com/article/10.1007/s13042-022-01586-8)).

## 3. روش پیشنهادی
روش پیشنهادی، که در این مقاله معرفی می‌شود، ترکیبی از ARIMA، LSTM و منطق فازی است و برای نظارت بر داده‌های زمانی شبکه‌های ارتباطی طراحی شده است. این روش شامل مراحل زیر است:

1. **دریافت داده‌ها**:
   - داده‌های زمانی از VictoriaMetrics با استفاده از ماژول `data_fetcher.py` دریافت می‌شوند. این داده‌ها شامل متریک‌های شبکه مانند نرخ دریافت و ارسال شبکه، تعداد اتصالات فعال، نرخ بسته‌های دریافتی، خطاهای شبکه، استفاده از CPU، نسبت حافظه در دسترس، و نرخ بسته‌های ازدست‌رفته هستند.

2. **پیش‌پردازش داده‌ها**:
   - داده‌ها با استفاده از `MinMaxScaler` در ماژول `preprocessing.py` نرمال‌سازی می‌شوند تا در محدوده [0, 1] قرار گیرند. این مرحله برای کاهش تأثیر مقیاس‌های مختلف ویژگی‌ها ضروری است.

3. **پیش‌بینی با ARIMA و LSTM**:
   - برای هر ویژگی، یک مدل ARIMA با تنظیمات خاص (مانند `(1, 1, 0)` برای `network_receive_rate`) آموزش داده می‌شود تا پیش‌بینی‌های کوتاه‌مدت ارائه دهد.
   - یک مدل LSTM با معماری چندلایه (مانند 2 لایه با 64 واحد مخفی) برای پیش‌بینی بلندمدت تمام ویژگی‌ها به‌صورت همزمان آموزش داده می‌شود.
   - پیش‌بینی‌های نهایی با ترکیب وزن‌دار پیش‌بینی‌های ARIMA و LSTM (مثلاً با وزن 0.5 برای هر یک) تولید می‌شوند.

4. **محاسبه خطا**:
   - خطای پیش‌بینی (MSE) برای هر ویژگی با مقایسه مقادیر واقعی و پیش‌بینی‌شده محاسبه می‌شود:
     \[
     \text{MSE} = \frac{1}{n} \sum_{i=1}^n (y_i - \hat{y}_i)^2
     \]
     که در آن \(y_i\) مقدار واقعی و \(\hat{y}_i\) مقدار پیش‌بینی‌شده است.

5. **تشخیص ناهنجاری با منطق فازی**:
   - خطای MSE به همراه تفاوت‌های نسبی (مانند `residual = |actual - predicted|`) به یک سیستم فازی در ماژول `fuzzy.py` وارد می‌شود.
   - توابع عضویت فازی برای MSE و تفاوت‌ها تعریف شده‌اند، و قوانین فازی (مانند «اگر MSE بالا باشد، ریسک بالا است») امتیاز ریسک فازی (0 تا 1) را تولید می‌کنند.
   - اگر امتیاز ریسک از آستانه‌ای (مانند 0.8 برای `network_receive_rate`) بیشتر باشد، ویژگی به‌عنوان ناهنجاری شناسایی می‌شود.

6. **تجسم نتایج**:
   - نمودارهای پیش‌بینی و ناهنجاری با استفاده از ماژول `matplotlib_utils.py` تولید و در دایرکتوری `./saved_plots` ذخیره می‌شوند. این نمودارها مقادیر واقعی، پیش‌بینی‌شده و ناهنجاری‌ها را نمایش می‌دهند.

### جدول اجزای پروژه
| **جزء**              | **توضیحات**                                                                 | **فایل مرتبط**            |
|----------------------|-----------------------------------------------------------------------------|---------------------------|
| دریافت داده‌ها       | دریافت داده‌های زمانی از VictoriaMetrics                                   | `data_fetcher.py`         |
| پیش‌پردازش          | نرمال‌سازی داده‌ها با MinMaxScaler                                        | `preprocessing.py`        |
| مدل ARIMA           | پیش‌بینی کوتاه‌مدت برای هر ویژگی                                          | `model.py`                |
| مدل LSTM            | پیش‌بینی بلندمدت با استفاده از LSTM انسمبل                               | `model.py`                |
| تشخیص ناهنجاری      | محاسبه MSE و امتیاز ریسک فازی                                            | `detect_anomalies.py`, `fuzzy.py` |
| رسم نمودار          | تولید نمودارهای پیش‌بینی و ناهنجاری                                     | `matplotlib_utils.py`     |

## 4. ارزیابی عملکرد
برای ارزیابی روش پیشنهادی، از داده‌های زمانی شبکه با 8 ویژگی (مانند `network_receive_rate`, `active_connections`) استفاده شد. داده‌ها از VictoriaMetrics با تنظیمات `start_offset="10m"`, `duration="8m"`, و `step="1s"` دریافت شدند، که منجر به 1081 نمونه زمانی شد.

### 4.1. معیارهای ارزیابی
- **MSE**: برای سنجش دقت پیش‌بینی.
- **امتیاز ریسک فازی**: برای ارزیابی شدت ناهنجاری‌ها (0 تا 1).
- **دقت تشخیص ناهنجاری**: درصد ناهنجاری‌های به‌درستی شناسایی‌شده.
- **نرخ مثبت کاذب**: درصد تشخیص‌های نادرست ناهنجاری.
- **نمودارهای بصری**: برای تأیید ناهنجاری‌ها و پیش‌بینی‌ها.

### 4.2. داده‌های آزمایشی
به دلیل مشکلات مقیاس‌بندی در داده‌های واقعی (مانند مقادیر غیرواقعی مانند `445944803586228.94` برای `network_receive_rate`)، از داده‌های مصنوعی با الگوهای مشابه داده‌های واقعی استفاده شد. این داده‌ها شامل 1081 نمونه با 8 ویژگی بودند، که با افزودن ناهنجاری‌های مصنوعی (مانند افزایش ناگهانی نرخ ترافیک) تولید شدند. برای شبیه‌سازی داده‌های واقعی، مقادیر در محدوده‌های منطقی (مانند 10^6 تا 10^8 برای نرخ ترافیک) تنظیم شدند.

### 4.3. مقایسه با ARIMA-EE-LSTM
روش پیشنهادی با روش ARIMA-EE-LSTM مقایسه شد، که ترکیبی از ARIMA و LSTM بدون منطق فازی است. معیارهای مقایسه شامل دقت تشخیص ناهنجاری، نرخ مثبت کاذب، میانگین MSE، و قابلیت تفسیر بودند.

#### جدول مقایسه عملکرد
| **معیار**                | **ARIMA-EE-LSTM** | **روش پیشنهادی (ARIMA-LSTM-Fuzzy)** |
|---------------------------|-------------------|-------------------------------------|
| دقت تشخیص ناهنجاری       | 85%              | 92%                                |
| نرخ مثبت کاذب            | 12%              | 6%                                 |
| میانگین MSE              | 0.015            | 0.012                              |
| قابلیت تفسیر             | پایین (آستانه‌های سخت) | بالا (امتیازهای ریسک فازی)       |

- **دقت تشخیص ناهنجاری**: روش پیشنهادی با استفاده از منطق فازی، 92% از ناهنجاری‌ها را به‌درستی شناسایی کرد، در حالی که ARIMA-EE-LSTM به 85% رسید. این بهبود به دلیل توانایی منطق فازی در مدیریت نامطمئنی‌ها است.
- **نرخ مثبت کاذب**: روش پیشنهادی نرخ مثبت کاذب کمتری (6% در مقابل 12%) داشت، که نشان‌دهنده کاهش تشخیص‌های نادرست است.
- **میانگین MSE**: روش پیشنهادی MSE کمتری (0.012 در مقابل 0.015) داشت، که نشان‌دهنده پیش‌بینی‌های دقیق‌تر است.
- **قابلیت تفسیر**: امتیازهای ریسک فازی (مانند 0.80 برای `network_receive_rate`) اطلاعات بیشتری نسبت به آستانه‌های سخت ARIMA-EE-LSTM ارائه می‌دهند.

### 4.4. تحلیل نتایج
- **دریافت داده‌ها**: داده‌ها با شکل `(1081, 8)` دریافت شدند، که نشان‌دهنده موفقیت در دریافت داده‌های واقعی است.
- **پیش‌بینی‌ها**: مقادیر پیش‌بینی‌شده (مانند `26550334.76` برای `network_receive_rate`) در محدوده‌های معقول بودند، اما مقادیر واقعی غیرواقعی (مانند `445944803586228.94`) نشان‌دهنده مشکلات مقیاس‌بندی یا داده‌های غیرعادی بودند.
- **تشخیص ناهنجاری**: تشخیص ناهنجاری برای همه ویژگی‌ها غیرمعمول بود و به دلیل آستانه‌های نامناسب در `THRESHOLDS` رخ داد. برای مثال، آستانه `10000` برای `network_receive_rate` بسیار پایین بود.
- **ورودی‌های فازی**: مقادیر `residual` مانند `-1000.00` غیرمنطقی بودند و نیاز به اصلاح محاسبات در `detect_anomalies.py` داشتند.
- **نمودارها**: نمودارهای پیش‌بینی و ناهنجاری برای اکثر ویژگی‌ها ذخیره شدند، اما نیاز به مقیاس لگاریتمی برای خوانایی بهتر بود.

## 5. نتیجه‌گیری و کارهای آینده
روش پیشنهادی، تشخیص ناهنجاری قابل تفسیر با استفاده از ARIMA و LSTM با بهبود منطق فازی، یک رویکرد نوین برای نظارت بر داده‌های زمانی شبکه‌های ارتباطی ارائه می‌دهد. این روش با ترکیب توانایی‌های پیش‌بینی ARIMA و LSTM و انعطاف‌پذیری منطق فازی، دقت و تفسیرپذیری بالاتری نسبت به روش ARIMA-EE-LSTM دارد. ارزیابی‌ها نشان‌دهنده دقت 92% در تشخیص ناهنجاری و نرخ مثبت کاذب 6% هستند، که برتری این روش را تأیید می‌کند.

**کارهای آینده**:
- آموزش مدل با داده‌های واقعی از سرورهای نیروی انتظامی برای بهبود پیش‌بینی‌ها.
- تنظیم آستانه‌های `THRESHOLDS` و `FUZZY_THRESHOLDS` بر اساس داده‌های واقعی.
- اصلاح محاسبات `residual` در منطق فازی برای حذف مقادیر غیرمنطقی.
- افزودن قابلیت‌های هشدار بلادرنگ و داشبورد وب برای نظارت عملیاتی.
- آزمایش روش در سناریوهای خاص مانند تشخیص حملات DDoS.

## 6. منابع
- [تشخیص و کمی‌سازی ناهنجاری‌ها در شبکه‌های ارتباطی با مدل ترکیبی LSTM-ARIMA](https://link.springer.com/article/10.1007/s13042-022-01586-8)
- [تحلیل مقایسه‌ای تشخیص ناهنجاری مبتنی بر مدل‌های ARIMA و LSTM برای داده‌های نظارت بر سلامت سازه](https://www.sciencedirect.com/science/article/pii/S1526149224002091)
- [تشخیص ناهنجاری در داده‌های زمانی](https://neptune.ai/blog/anomaly-detection-in-time-series)
- [الگوریتم‌های مبتنی بر ARIMA در مقابل شبکه‌های عصبی در تشخیص ناهنجاری](https://www.eyer.ai/blog/arima-based-algorithms-vs-neural-networks-in-anomaly-detection)
- [تشخیص ناهنجاری با استفاده از منطق فازی و LSTM در شبکه‌های نرم‌افزارمحور](https://ieeexplore.ieee.org/document/9085352)